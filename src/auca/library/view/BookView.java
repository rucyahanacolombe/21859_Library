/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package auca.library.view;

import auca.library.dao.BookDao;
import auca.library.dao.CategoryDao;
import auca.library.model.Book;
import auca.library.model.Category;
import auca.library.service.IBookCategoryService;
import auca.library.service.IBookService;
import auca.library.service.IClientService;
import auca.library.util.HibernateUtil;
import com.toedter.calendar.JDateChooser;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Criteria;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * @author PAV
 */
public class BookView extends javax.swing.JInternalFrame {

    /**
     * Creates new form BookView
     */
    public BookView() {
        initComponents();
        addToCombo();
        PopulateBook();
        PopulateCategory();
        DateForm();

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void PopulateBook() {
        BookDao bdao = new BookDao();
        List<Book> cl = bdao.getBook();
        String[] col = {"Book Id", "Title", "Publishing House", "Publishing Date", "Author", "Pages", "Category Id"};
        DefaultTableModel tm = (DefaultTableModel) table.getModel();
        tm.setRowCount(0);
        tm.setColumnIdentifiers(col);
        for (Iterator iter = cl.iterator(); iter.hasNext();) {
            Book b = (Book) iter.next();
            Object[] book = {b.getBookid(), b.getTitle(), b.getPublishinghouse(), b.getPublishingdate(), b.getAuthor(), b.getPages(), b.getCategoryname()};
            tm.addRow(book);

        }
    }
    public void DateForm(){
        JDateChooser datechooser = new JDateChooser();
        datechooser.setDateFormatString("YYYY-MM-dd");
        
    
    }

    private void PopulateCategory() {
        CategoryDao cdao = new CategoryDao();
        List<Category> cl = cdao.getCategory();
        String[] col = {"Category Id", "Category Name"};
        DefaultTableModel tm = (DefaultTableModel) tablecat.getModel();
        tm.setRowCount(0);
        tm.setColumnIdentifiers(col);
        for (Iterator iter = cl.iterator(); iter.hasNext();) {
            Category c = (Category) iter.next();
            Object[] client = {c.getCid(), c.getCname()};
            tm.addRow(client);

        }
    }

    public void addToCombo() {
        BookDao bookDao = new BookDao();
        List<String> clie = bookDao.read();
        clientcat.removeAll();
        for (String cat : clie) {
            clientcat.addItem(cat.toString());

        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        catid = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        catname = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablecat = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        name9 = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        bid = new javax.swing.JTextField();
        title = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        author = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        pages = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        phouse = new javax.swing.JTextField();
        pdate = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        clientcat = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        catid.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Category Form", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel14.setText("Category ID");

        jLabel15.setText("Category Name");

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout catidLayout = new javax.swing.GroupLayout(catid);
        catid.setLayout(catidLayout);
        catidLayout.setHorizontalGroup(
            catidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catidLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(catidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86)
                .addGroup(catidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(catname))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        catidLayout.setVerticalGroup(
            catidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catidLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(catidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(catidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catname, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButton2)
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addGap(34, 34, 34)
                .addComponent(jButton3)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        tablecat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category Id", "Category Name"
            }
        ));
        jScrollPane2.setViewportView(tablecat);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(catid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Book Category", jPanel1);

        name9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Book Form", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel55.setText("Book Id");

        bid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidbidActionPerformed(evt);
            }
        });

        title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titletitleActionPerformed(evt);
            }
        });

        jLabel56.setText("Title");

        author.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                authorauthorActionPerformed(evt);
            }
        });

        jLabel57.setText("Author");

        jLabel58.setText("Pages");

        pages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pagespagesActionPerformed(evt);
            }
        });

        jLabel59.setText("Publishing date");

        jLabel60.setText("Publishing House");

        phouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phousephouseActionPerformed(evt);
            }
        });

        jLabel1.setText("Book Category");

        clientcat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                clientcatMousePressed(evt);
            }
        });

        javax.swing.GroupLayout name9Layout = new javax.swing.GroupLayout(name9);
        name9.setLayout(name9Layout);
        name9Layout.setHorizontalGroup(
            name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(name9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bid)
                    .addComponent(title)
                    .addComponent(author)
                    .addComponent(pages)
                    .addComponent(phouse)
                    .addComponent(pdate, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(clientcat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        name9Layout.setVerticalGroup(
            name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(name9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bid, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phouse, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pdate, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(author, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pages, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(name9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(name9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, name9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clientcat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setText("Save");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setText("Delete");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton9.setText("Update");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jButton7)
                .addGap(47, 47, 47)
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addGap(44, 44, 44))
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book id", "Title", "Publishing House", "Publishing Date", "Author", "Pages", "Book Category"
            }
        ));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(name9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(name9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Book", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bidbidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidbidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bidbidActionPerformed

    private void titletitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titletitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titletitleActionPerformed

    private void authorauthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_authorauthorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_authorauthorActionPerformed

    private void pagespagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pagespagesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pagespagesActionPerformed

    private void phousephouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phousephouseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phousephouseActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        /*Book b = new Book();
            b.setBookid(bid.getText());
            b.setTitle(title.getText());
            b.setPublishinghouse(phouse.getText());
            b.setPublishingdate(new Date(pdate.getDate().getTime()));
            b.setAuthor(author.getText());
            b.setPages(pages.getText());
            
            String id = null;
            String name = clientcat.getSelectedItem().toString();
            Transaction tr = null;
            Session ses = HibernateUtil.getSessionFactory().openSession();
            tr = ses.beginTransaction();
            Criteria Bookcat = ses.createCriteria(Category.class);
            SQLQuery query = ses.createSQLQuery("select cid from Category where cname=?");
            query.setParameter(0, name);
            List temp = query.list();
            for (Object obj : temp) {
            id = obj.toString();
            }
            ses.close();
            b.setCategoryname(id);
            
            BookDao bdao = new BookDao();
            bdao.SaveBook(b);
            PopulateBook();
            JOptionPane.showMessageDialog(this, "data saved");*/
            
            
            
        try {
            
           Registry registry = LocateRegistry.getRegistry("localhost", 2222);
            IBookService bookservice = (IBookService) registry.lookup("bookservice");
            
            String a = bid.getText();
            String b = title.getText();
            String c = phouse.getText();
            Date d=(new Date(pdate.getDate().getTime()));
            String e = author.getText();
            String f = pages.getText();
            String id = null;
            String name = clientcat.getSelectedItem().toString();
            Transaction tr = null;
            Session ses = HibernateUtil.getSessionFactory().openSession();
            tr = ses.beginTransaction();
            Criteria Bookcat = ses.createCriteria(Category.class);
            SQLQuery query = ses.createSQLQuery("select cid from Category where cname=?");
            query.setParameter(0, name);
            List temp = query.list();
            for (Object obj : temp) {
            id = obj.toString();
            }
            ses.close();
            String x=id;
                       
            boolean result = bookservice.save(a,b,c,d, e,f,x);
            System.out.println(result ? "saved succefully" : "error,cant be saved");
            PopulateBook();
        } catch (RemoteException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }
       

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        try {
            Registry registry = LocateRegistry.getRegistry("localhost", 2222);
            IBookService bookservice = (IBookService) registry.lookup("bookservice");
            String a = bid.getText();
            boolean result = bookservice.delete(a);
            PopulateBook();
            System.out.println(result ? "delete succefully" : "error,cant be saved");
            /*Book b = new Book();
            Session session = HibernateUtil.getSessionFactory().openSession();
            Transaction tr = session.beginTransaction();
            b = (Book) session.get(Book.class, bid.getText());
            BookDao bdao = new BookDao();
            bdao.DeleteBook(b);
            JOptionPane.showMessageDialog(this, "data deleted");
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            PopulateBook();*/
        } catch (RemoteException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
            /* Book b = new Book();
            b.setBookid(bid.getText());
            b.setTitle(title.getText());
            b.setPublishinghouse(phouse.getText());
            b.setPublishingdate(new Date(pdate.getDate().getTime()));
            b.setAuthor(author.getText());
            b.setPages(pages.getText());
            BookDao bdao = new BookDao();
            bdao.UpdateBook(b);
            PopulateBook();
            JOptionPane.showMessageDialog(this, "Updated saved");*/
        try {
            
            Registry registry = LocateRegistry.getRegistry("localhost", 2222);
            IBookService bookservice = (IBookService) registry.lookup("bookservice");
            String a = bid.getText();
            String b = title.getText();
            String c = phouse.getText();
            Date d =(new Date(pdate.getDate().getTime()));
            String e = author.getText();
            String f = pages.getText();
            String id = null;
            String name = clientcat.getSelectedItem().toString();
            Transaction tr = null;
            Session ses = HibernateUtil.getSessionFactory().openSession();
            tr = ses.beginTransaction();
            Criteria Bookcat = ses.createCriteria(Category.class);
            SQLQuery query = ses.createSQLQuery("select cid from Category where cname=?");
            query.setParameter(0, name);
            List temp = query.list();
            for (Object obj : temp) {
                id = obj.toString();
            }
            ses.close();
            String x=id;
                       
            boolean result = bookservice.update(a,b,c,d, e,f,x);
            System.out.println(result ? "updated succefully" : "error,cant be saved");
            PopulateBook();
        } catch (RemoteException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        /*Category ct = new Category();
            ct.setCid(id.getText());
            ct.setCname(catname.getText());
            CategoryDao catdao = new CategoryDao();
            catdao.SaveCategory(ct);
            PopulateCategory();
            JOptionPane.showMessageDialog(this, "Data saved");*/
        try {
            Registry registry = LocateRegistry.getRegistry("localhost", 2222);
            IBookCategoryService categoryservice = (IBookCategoryService) registry.lookup("bookcategoryservice");
            String a = id.getText();
            String b = catname.getText();
            boolean result = categoryservice.save(a, b);
            System.out.println(result ? "saved succefully" : "error,cant be saved");
        } catch (RemoteException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*Category ct = new Category(id.getText());
            
            CategoryDao cdao = new CategoryDao();
            cdao.DeleteCategory(ct);
            JOptionPane.showMessageDialog(this, "data deleted");
            
            DefaultTableModel model = (DefaultTableModel) tablecat.getModel();
            model.setRowCount(0);
            PopulateCategory();*/
        try {
            // TODO add your handling code here:        /*Category ct = new Category();
            Registry registry = LocateRegistry.getRegistry("localhost", 2222);
            IBookCategoryService categoryservice = (IBookCategoryService) registry.lookup("bookcategoryservice");
            String a = id.getText();
            boolean result = categoryservice.delete(a);
            PopulateCategory();
            System.out.println(result ? "delete succefully" : "error,cant be saved");

        } catch (RemoteException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        /*        // TODO add your handling code here:
            Category ct = new Category();
            ct.setCid(id.getText());
            ct.setCname(catname.getText());
            CategoryDao catdao = new CategoryDao();
            catdao.SaveCategory(ct);
            JOptionPane.showMessageDialog(this, "Updated saved");
            PopulateCategory();*/
        try {
            Registry registry = LocateRegistry.getRegistry("localhost", 2222);
            IBookCategoryService categoryservice = (IBookCategoryService) registry.lookup("bookcategoryservice");
            String a = id.getText();
            String b = catname.getText();
            boolean result = categoryservice.update(a, b);
            PopulateCategory();
            System.out.println(result ? "update succefully" : "error,cant be saved");

        } catch (RemoteException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(BookView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void clientcatMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientcatMousePressed
        // TODO add your handling code here:
        /*clientcat.removeAll();
        Transaction tr=null;
        Session session = HibernateUtil.getSessionFactory().openSession();
        tr =session.beginTransaction();
        SQLQuery query=session.createSQLQuery("select cname from Category");
        List ls= query.list();
        for (Object cat:ls){
        clientcat.addItem(cat.toString());
        
        }*/
    }//GEN-LAST:event_clientcatMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField author;
    private javax.swing.JTextField bid;
    private javax.swing.JPanel catid;
    private javax.swing.JTextField catname;
    private javax.swing.JComboBox<String> clientcat;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel name9;
    private javax.swing.JTextField pages;
    private com.toedter.calendar.JDateChooser pdate;
    private javax.swing.JTextField phouse;
    private javax.swing.JTable table;
    private javax.swing.JTable tablecat;
    private javax.swing.JTextField title;
    // End of variables declaration//GEN-END:variables
}
